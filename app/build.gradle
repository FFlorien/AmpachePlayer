apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    defaultConfig {
        applicationId "be.florien.anyflow"
        multiDexEnabled true
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 3
        versionName "0.0.1"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        debug {
            applicationIdSuffix '.debug'
            minifyEnabled false
            shrinkResources false
//            signingConfig signingConfigs.Debug
        }
        mock {
            initWith(debug)
            applicationIdSuffix '.mock'
            minifyEnabled false
            shrinkResources false
            debuggable true
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        mock.java.srcDirs = ['src/main/java', 'src/mock/java']
    }
    dataBinding {
        enabled = true
    }
    kapt {
        generateStubs = true
    }
}

dependencies {
    //base
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:1.0.2"
    implementation "com.google.android.material:material:1.0.0"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'com.simplecityapps:recyclerview-fastscroll:1.0.18'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'com.google.firebase:firebase-core:16.0.8'
    implementation('com.crashlytics.sdk.android:crashlytics:2.9.4@aar') {
        transitive = true
    }
    //tests
    androidTestImplementation('androidx.test.espresso:espresso-core:3.1.0-alpha4', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'
    //debug
    implementation "com.facebook.stetho:stetho:$stetho_version"
    implementation "com.facebook.stetho:stetho-okhttp3:$stetho_version"
    implementation 'com.crashlytics.sdk.android:crashlytics:2.9.9'
    implementation 'com.jakewharton.timber:timber:4.7.1'
    //DI
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"
    implementation 'org.glassfish:javax.annotation:10.0-b28'
    //internet
    implementation 'io.reactivex.rxjava2:rxjava:2.2.2'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"
    implementation("com.squareup.retrofit2:converter-simplexml:$retrofit_version") {
        exclude module: 'stax'
        exclude module: 'stax-api'
        exclude module: 'xpp3'
    }
    //glide
    implementation 'com.github.bumptech.glide:glide:4.8.0'
    kapt 'com.github.bumptech.glide:compiler:4.8.0'
    //ExoPlayer
    implementation 'com.google.android.exoplayer:exoplayer-core:2.9.4'
    implementation 'com.google.android.exoplayer:extension-okhttp:2.9.4'
    implementation 'com.google.android.exoplayer:extension-mediasession:2.9.4'
    //Room
    implementation 'androidx.room:room-runtime:2.0.0'
    implementation 'androidx.room:room-rxjava2:2.0.0'
    kapt 'androidx.room:room-compiler:2.0.0'
    //Paging
    implementation 'androidx.paging:paging-runtime:2.1.0'
    implementation 'android.arch.paging:rxjava2:1.0.1'
}
repositories {
    mavenCentral()
    google()
    maven { url 'https://maven.fabric.io/public' }
}

apply plugin: 'com.google.gms.google-services'